---
title: Choosing a CMS for a static site
date: 2021-04-11 17:56
tags:
  - Software engineering
---
To encourage myself to create more content on my personal site I thought it would be helpful to have a better writing environment. I wanted something that was simple to setup, ideally free, and would offer an easy way to preview the articles before deploying to production.

Given it's just me writing and no other content writers, I was happy to stick with a Git based workflow because it's super simple to just keep my Markdown blog articles where they were and I wouldn't be tied to any CMS provider because ultimately all the content still lives within my repo.

That really left me with two options

1. [Forestry](https://forestry.io/)
2. [Netlify CMS](https://www.netlifycms.org/)

Forestry appealed to me because, unlike Netlify CMS, I didn't have to setup the CMS interface and just required some simple, file based configuration in my repo. I decided to give it a shot and see how quickly I could get it all setup.

The first stumbling block I came across was that it couldn't find any of my blog articles despite me providing what looked like the correct config. It turns out that the file extensions need to end with \`.md\` in order for Forrestry to recognise them but my articles have nested extensions in Middleman and look like \`.html.md.erb\`. This is great because I can first process the articles as ERB before then processing as Markdown.

Okay, no problem I thought, I can work around this. So I moved the articles to a new directory out of the \`source\` directory where files are automatically built in Middleman and renamed them to just have \`.md\` extensions. I then created a Ruby module that would be called in local development and during a build. This module simply had to copy the files to a \`source/blog/\` directory and rename the extension to \`.html.md.erb\`. Worked like a charm and Forestry was happy.

My next issue was that when I saved articles, they would be deployed straight to production. What I really needed was a better workflow to let me preview everything. No problems though, Forrestry has previews where I can configure it to run my local server. I found the appropriate Docker image to run Ruby and Node and setup the commands. Gems and npm packages installed without issue and I got the message that the server was running. However, try as I might, I continued to get a 503 error when I tried to view the previews of the blogs. I thought I could maybe get it to work by giving it the Middleman build command and then view the pages from the build directory but that just caused the server to hang. I grappled with these issues for several hours before coming to the conclusion that this was no longer fitting the bill for me.

Cue a bit of GitHub work to drop previous commits, including the work I had done to move the blog articles to a new folder and then I started to look at Netlify CMS.